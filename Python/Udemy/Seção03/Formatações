# Interpolação de string com % em Python
#s - string
#f - float
#d - um numero inteiro do proprio python
#x e X - Hexadecimal (ABCDEF0123456789)
# O valor passado se chama Placeholders

nome = 'Bruno'
preco = 129.92534
variavel = '%s está devendo %.2f' % (nome, preco)
print(variavel)
print('O hexadecimal de B %d é %03X' %(231, 231))



#Formatação básica de strings - PED
#s - string
#d - int
#f - float
#.<número de dígitos>f
#x ou X - Hexadecimal
#(Caractere)(><^)(quantidade)
#> - Esquerda
#< - Direita
#^ - Centro
#= - Força o número a aparecer antes dos zeros
#Sinal - + ou -
#Ex.: 0>-100,.1f
#Conversion flags - !r !s !a 

variavel = 'BRUNO'
print(f'{variavel}')
print(f'{variavel: >10}')
print(f'{variavel: <10}.')
print(f'{variavel:0^11}')
print(f'{10000.32329327832832:.3f}')
print(f'{10000.32329327832832:,.3f}')
print(f'{10000.32329327832832:+,.3f}')
print(f'{10000.32329327832832:+,.3f}') # O sinal de + força a mostrar o numero positivo
print(f'{129.9321:0>+10,.3f}')
print(f'{129.9321:0=+10,.3f}') # O sinal de = Força o número a aparecer antes dos zeros
